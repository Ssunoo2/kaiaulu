% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jira.R
\name{download_jira_issues_by_date}
\alias{download_jira_issues_by_date}
\title{Download JIRA issues filtering by created date}
\usage{
download_jira_issues_by_date(
  domain,
  credentials,
  jql_query,
  fields,
  save_folder_path,
  max_results,
  verbose,
  max_total_downloads,
  date_lower_bound = NULL,
  date_upper_bound = NULL
)
}
\arguments{
\item{domain}{Custom JIRA domain URL set in config file}

\item{credentials}{a path to text file containing your username/api token}

\item{jql_query}{Specific query string to specify criteria for fetching}

\item{fields}{List of fields that are downloaded in each issue}

\item{save_folder_path}{Path that files will be save along in .json format}

\item{max_results}{(optional) the maximum number of results to download per page.
Default is 50. [How to use max_results](https://confluence.atlassian.com/jirakb/how-to-use-the-maxresults-api-parameter-for-jira-issue-search-rest-api-1251999998.html)}

\item{verbose}{boolean flag to specify printing operational
messages or not. These messages will describe errors or successes in executing code.
And example may be declaring the file name of a successfully downloaded file or printing
how many issues have been downloaded so far}

\item{max_total_downloads}{Maximum downloads per function call.
This value specifies how many issues should be extracted and API calls will cease if a subsequent
API call would reach or surpass this value.}

\item{date_lower_bound}{an optional API parameter that alters the GET request}

\item{date_upper_bound}{an optional API parameter that alters the GET request}
}
\description{
Calls \code{link{download_jira_issues}} with search_query specifying dates
Only issues created in the range of the dates passed will be downloaded.
example of search query: 'created >= 2020-01-01 12:00'
[How to use created](https://support.atlassian.com/jira-software-cloud/docs/jql-fields/#Created)
}
\seealso{
\code{link{download_jira_issues}} to download all JIRA issues data,

\code{link{download_jira_issues_by_issue_key}} to download JIRA data using issuekey as a search criteria,

\code{link{refresh_jira_issues}} to download only JIRA data that has not already been downloaded

\code{link{parse_jira}} to parse jira issues along a file-path

Other jira: 
\code{\link{download_jira_issues_by_issue_key}()},
\code{\link{download_jira_issues}()},
\code{\link{refresh_jira_issues}()}

Other downloaders: 
\code{\link{download_jira_issues_by_issue_key}()},
\code{\link{download_jira_issues}()},
\code{\link{refresh_jira_issues}()}
}
\concept{downloaders}
\concept{jira}
