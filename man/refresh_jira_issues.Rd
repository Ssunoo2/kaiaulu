% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jira.R
\name{refresh_jira_issues}
\alias{refresh_jira_issues}
\title{Download JIRA issues Refresh}
\usage{
refresh_jira_issues(
  domain,
  credentials,
  jql_query,
  fields,
  save_folder_path,
  max_results,
  verbose,
  max_downloads,
  unaltered_file_path
)
}
\arguments{
\item{domain}{Custom JIRA domain URL set in config file}

\item{credentials}{a path to text file containing your username/api token}

\item{jql_query}{Specific query string to specify criteria for fetching}

\item{fields}{List of fields that are downloaded in each issue}

\item{save_folder_path}{Path that files will be save along in .json format}

\item{max_results}{(optional) the maximum number of results to download per page.
Default is 50. [How to use max_results](https://confluence.atlassian.com/jirakb/how-to-use-the-maxresults-api-parameter-for-jira-issue-search-rest-api-1251999998.html)}

\item{verbose}{boolean flag to specify printing operational
messages or not. These messages will describe errors or successes in executing code.
And example may be declaring the file name of a successfully downloaded file or printing
how many issues have been downloaded so far}

\item{max_downloads}{Maximum downloads per function call.
This value specifies how many issues should be extracted and API calls will cease if a subsequent
API call would reach or surpass this value.}

\item{unaltered_file_path}{the unaltered file path set in the config file}
}
\description{
Extracts the greatest 'issueKey' value from files along save_folder_path. This is passed to
\code{link{download_jira_issues_by_issuekey}} and only issue keys with greater value
will then be downloaded. This allows us to download only issues that have not already been
downloaded previously.
}
\seealso{
\code{link{download_jira_issues_by_issue_key}} to download JIRA data using issuekey as a search criteria,

\code{link{download_jira_issues}} to download all JIRA issues data,

\code{link{download_jira_issues_by_date}} to download JIRA data using created as a search criteria,

\code{link{parse_jira}} to parse jira issues along a file-path,

\code{link{parse_jira_latest_date}} to retrieve the file_name to be passed to this function

Other downloaders: 
\code{\link{download_jira_issues_by_date}()},
\code{\link{download_jira_issues_by_issue_key}()},
\code{\link{download_jira_issues}()}

Other jira: 
\code{\link{download_jira_issues_by_date}()},
\code{\link{download_jira_issues_by_issue_key}()},
\code{\link{download_jira_issues}()}
}
\concept{downloaders}
\concept{jira}
