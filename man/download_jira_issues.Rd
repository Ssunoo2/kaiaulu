% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jira.R
\name{download_jira_issues}
\alias{download_jira_issues}
\title{Download JIRA Issues}
\usage{
download_jira_issues(
  domain,
  credentials,
  jql_query,
  fields,
  save_folder_path,
  max_results = 50,
  verbose = FALSE,
  max_downloads = 5000,
  search_query = NULL
)
}
\arguments{
\item{domain}{Custom JIRA domain URL set in config file}

\item{credentials}{a path to text file containing your username/api token}

\item{jql_query}{Specific query string to specify criteria for fetching}

\item{fields}{List of fields that are downloaded in each issue}

\item{save_folder_path}{Path that files will be save along as .json format}

\item{max_results}{(optional) the maximum number of results to download per page.
Default is 50. [How to use max_results](https://confluence.atlassian.com/jirakb/how-to-use-the-maxresults-api-parameter-for-jira-issue-search-rest-api-1251999998.html)}

\item{verbose}{boolean flag to specify printing operational
messages or not. These messages will describe errors or successes in executing code.
And example may be declaring the file name of a successfully downloaded file or printing
how many issues have been downloaded so far}

\item{max_downloads}{Maximum downloads per function call.
This value specifies how many issues should be extracted and API calls will cease if a subsequent
API call would reach or surpass this value.}

\item{search_query}{an optional API parameter that alters the GET request.
Examples are 'created > date' or 'issueKey < value'.}
}
\description{
Download issue data from [rest/api/2/search](https://developer.atlassian.com/cloud/jira/platform/rest/v2/api-group-issue-search/#api-rest-api-2-search-post) JIRA endpoint.
These are either preset in the corresponding chunk
in which they are called or are set to the values in the config file used.
Files are saved along save_folder_path a la ../../rawdata/project_name/project_management_tool/issues.
example: ../../rawdata/kaiaulu/JIRA/issues
Files are downloaded as .json files with naming convention
(project name)_issues_(UNIX time of lowest 'created' value)_(UNIX time of greatest 'created' value)
example: Kaiaulu_issues_1121495281_1121527069.json
}
\seealso{
\code{link{download_jira_issues_by_issue_key}} to download JIRA data using issuekey as a search criteria,

\code{link{download_jira_issues_by_date}} to download JIRA data using created as a search criteria,

\code{link{refresh_jira_issues}} to download only JIRA data that has not already been downloaded

Other jira: 
\code{\link{download_jira_issues_by_date}()},
\code{\link{download_jira_issues_by_issue_key}()},
\code{\link{refresh_jira_issues}()}

Other downloaders: 
\code{\link{download_jira_issues_by_date}()},
\code{\link{download_jira_issues_by_issue_key}()},
\code{\link{refresh_jira_issues}()}
}
\concept{downloaders}
\concept{jira}
